

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')", "--quiet", "-u", "${MONGO_USER}", "-p", "${MONGO_PASSWORD}", "--authenticationDatabase", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  fastapi:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: fastapi
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app/src
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      DEBUG: ${DEBUG}                   # Переменная из .env
      MONGO_HOST: mongodb               # Имя сервиса MongoDB
      MONGO_PORT: 27017                 # Порт MongoDB
      MONGO_NAME: ${MONGO_NAME}         # Переменная из .env
      MONGO_USER: ${MONGO_USER}         # Переменная из .env
      MONGO_PASSWORD: ${MONGO_PASSWORD}

      
  mongo-express:  # Новый сервис
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"  # Веб-интерфейс будет доступен на порту 8081
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongodb"  # Имя сервиса MongoDB
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}  # Из .env
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}  # Из .env
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin}  # Логин для входа (значение по умолчанию "admin")
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-password}  # Пароль для входа (значение по умолчанию "password")
    depends_on:
      mongodb:
        condition: service_healthy  # Ждём запуска MongoDB